-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.ResetOnSpawn = false
screenGui.Name = "RecorderUI"

-- Main container
local mainFrame = Instance.new("Frame")
mainFrame.Parent = screenGui
mainFrame.Size = UDim2.new(0, 260, 0, 250)
mainFrame.Position = UDim2.new(0.5, -130, 0.5, -125)
mainFrame.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
mainFrame.BorderSizePixel = 0
mainFrame.BackgroundTransparency = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Name = "MainFrame"

-- Shadow / rounding
local uicorner = Instance.new("UICorner", mainFrame)
uicorner.CornerRadius = UDim.new(0, 12)

-- Status label
local statusLabel = Instance.new("TextLabel")
statusLabel.Parent = mainFrame
statusLabel.Size = UDim2.new(1, -20, 0, 30)
statusLabel.Position = UDim2.new(0, 10, 0, 10)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "Status: Idle"
statusLabel.TextColor3 = Color3.fromRGB(30, 30, 30)
statusLabel.Font = Enum.Font.GothamBold
statusLabel.TextScaled = true
statusLabel.Name = "StatusLabel"

-- Create layout for buttons
local buttonContainer = Instance.new("Frame")
buttonContainer.Parent = mainFrame
buttonContainer.Size = UDim2.new(1, -20, 0, 170)
buttonContainer.Position = UDim2.new(0, 10, 0, 50)
buttonContainer.BackgroundTransparency = 1

local grid = Instance.new("UIGridLayout", buttonContainer)
grid.CellSize = UDim2.new(0, 120, 0, 40)
grid.CellPadding = UDim2.new(0, 10, 0, 10)
grid.FillDirectionMaxCells = 2
grid.HorizontalAlignment = Enum.HorizontalAlignment.Center
grid.VerticalAlignment = Enum.VerticalAlignment.Top

-- Function to create buttons
local function makeButton(name, color)
	local btn = Instance.new("TextButton")
	btn.Parent = buttonContainer
	btn.Name = name
	btn.Text = name
	btn.Font = Enum.Font.GothamBold
	btn.TextScaled = true
	btn.BackgroundColor3 = color
	btn.TextColor3 = Color3.new(1, 1, 1)
	local corner = Instance.new("UICorner", btn)
	corner.CornerRadius = UDim.new(0, 8)
	return btn
end

-- Buttons
local recordButton = makeButton("Record", Color3.fromRGB(220, 53, 69))
local stopRecordButton = makeButton("Stop Record", Color3.fromRGB(255, 193, 7))
local stopReplayButton = makeButton("Stop Replay", Color3.fromRGB(255, 87, 34))
local destroyButton = makeButton("Destroy", Color3.fromRGB(108, 117, 125))
local deleteButton = makeButton("Delete", Color3.fromRGB(220, 53, 69))
local saveButton = makeButton("Save", Color3.fromRGB(40, 167, 69))
local nextChunkButton = makeButton("Next Chunk", Color3.fromRGB(0, 123, 255))

-- Floating minimize & close buttons
local closeButton = Instance.new("ImageButton")
closeButton.Parent = screenGui
closeButton.Size = UDim2.new(0, 40, 0, 40)
closeButton.Position = UDim2.new(1, -60, 0.2, 0)
closeButton.BackgroundColor3 = Color3.fromRGB(255, 75, 75)
closeButton.Image = "rbxassetid://6031094678" -- X icon
Instance.new("UICorner", closeButton).CornerRadius = UDim.new(1, 0)

local minimizeButton = Instance.new("ImageButton")
minimizeButton.Parent = screenGui
minimizeButton.Size = UDim2.new(0, 40, 0, 40)
minimizeButton.Position = UDim2.new(1, -110, 0.2, 0)
minimizeButton.BackgroundColor3 = Color3.fromRGB(255, 195, 0)
minimizeButton.Image = "rbxassetid://6035067836" -- dash icon
Instance.new("UICorner", minimizeButton).CornerRadius = UDim.new(1, 0)

-- Minimize & Close logic
local minimized = false
minimizeButton.MouseButton1Click:Connect(function()
	minimized = not minimized
	mainFrame.Visible = not minimized
end)

closeButton.MouseButton1Click:Connect(function()
	screenGui:Destroy()
end)
