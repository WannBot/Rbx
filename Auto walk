-- LocalScript by ChatGPT v3 (Realistic Movement Replay)
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")

local recordedFrames = {}
local recording = false
local playing = false
local walkSpeed = 14
local frameInterval = 0.1
local fileName = "pathrecord_realistic.json"
local currentFrame = 1
local timeAccumulator = 0

------------------------------------------------------
-- UI
------------------------------------------------------
local Window = Rayfield:CreateWindow({
	Name = "Auto Path Recorder v3",
	LoadingTitle = "Realistic Path Replay",
	LoadingSubtitle = "by ChatGPT",
})

local Tab = Window:CreateTab("Main", 4483362458)

Tab:CreateButton({
	Name = "🎬 Start / Stop Record",
	Callback = function()
		recording = not recording
		if recording then
			recordedFrames = {}
			print("🎥 Mulai merekam gerakan...")
		else
			print("🧾 Rekaman selesai! Frame:", #recordedFrames)
		end
	end
})

Tab:CreateButton({
	Name = "▶️ Play Path",
	Callback = function()
		if #recordedFrames == 0 then
			warn("Belum ada rekaman.")
			return
		end
		playing = true
		currentFrame = 1
		print("▶️ Memutar path...")
	end
})

Tab:CreateButton({
	Name = "⏹️ Stop Play",
	Callback = function()
		playing = false
		print("⏹️ Playback dihentikan.")
	end
})

Tab:CreateInput({
	Name = "Walk Speed",
	PlaceholderText = tostring(walkSpeed),
	RemoveTextAfterFocusLost = false,
	Callback = function(value)
		local num = tonumber(value)
		if num then
			walkSpeed = num
			humanoid.WalkSpeed = num
			print("⚙️ Speed:", walkSpeed)
		end
	end
})

Tab:CreateButton({
	Name = "💾 Save Path",
	Callback = function()
		if #recordedFrames == 0 then
			warn("Tidak ada data untuk disimpan.")
			return
		end
		writefile(fileName, HttpService:JSONEncode(recordedFrames))
		print("✅ Path disimpan ke", fileName)
	end
})

Tab:CreateButton({
	Name = "📂 Load Path",
	Callback = function()
		if isfile(fileName) then
			local data = readfile(fileName)
			recordedFrames = HttpService:JSONDecode(data)
			print("📂 Path dimuat:", #recordedFrames, "frame")
		else
			warn("❌ File tidak ditemukan:", fileName)
		end
	end
})

------------------------------------------------------
-- RECORD LOOP
------------------------------------------------------
local lastTime = 0
RunService.Heartbeat:Connect(function(dt)
	if recording then
		lastTime += dt
		if lastTime >= frameInterval then
			table.insert(recordedFrames, {
				pos = {x = hrp.Position.X, y = hrp.Position.Y, z = hrp.Position.Z},
				dir = {x = humanoid.MoveDirection.X, y = humanoid.MoveDirection.Y, z = humanoid.MoveDirection.Z},
				jumping = humanoid:GetState() == Enum.HumanoidStateType.Jumping
			})
			lastTime = 0
		end
	end
end)

------------------------------------------------------
-- PLAYBACK LOOP
------------------------------------------------------
RunService.Heartbeat:Connect(function(dt)
	if playing and currentFrame <= #recordedFrames then
		local f = recordedFrames[currentFrame]
		local nextPos = Vector3.new(f.pos.x, f.pos.y, f.pos.z)
		local moveDir = Vector3.new(f.dir.x, f.dir.y, f.dir.z)

		-- Gerakan sesuai arah
		humanoid:Move(moveDir, false)

		-- Lerp posisi sedikit agar halus
		hrp.CFrame = hrp.CFrame:Lerp(CFrame.new(nextPos, nextPos + moveDir), 0.25)

		-- Loncat bila terekam
		if f.jumping then
			humanoid.Jump = true
		end

		currentFrame += 1
	else
		if playing and currentFrame > #recordedFrames then
			print("✅ Path playback selesai.")
			playing = false
		end
	end
end)
