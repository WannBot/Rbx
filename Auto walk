-- ‚öôÔ∏è Service
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local player = Players.LocalPlayer

-- === Rayfield UI ===
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local Window = Rayfield:CreateWindow({
	Name = "Auto Walk V4",
	LoadingTitle = "Smooth Record",
	LoadingSubtitle = "Record ‚Ä¢ Replay ‚Ä¢ Save ‚Ä¢ Load",
	KeySystem = false,
})
local Tab = Window:CreateTab("Path Control", 4483362458)

-- === State ===
local hrp, hum
local recording = false
local playing = false
local recordData = {}
local BV
local playConn
local saveFile = "autowalk_v4.json"
local playSpeed = 1

-- === Helper ===
local function bindChar()
	local char = player.Character or player.CharacterAdded:Wait()
	hum = char:WaitForChild("Humanoid")
	hrp = char:WaitForChild("HumanoidRootPart")
end
bindChar()
player.CharacterAdded:Connect(bindChar)

local function ensureBV()
	if not BV or not BV.Parent then
		BV = Instance.new("BodyVelocity")
		BV.MaxForce = Vector3.new(1e5, 0, 1e5)
		BV.P = 1e4
		BV.Velocity = Vector3.zero
		BV.Parent = hrp
	end
end

local function cleanupBV()
	if BV then
		pcall(function() BV.Velocity = Vector3.zero end)
		pcall(function() BV:Destroy() end)
		BV = nil
	end
end

----------------------------------------------------------
-- === RECORD ===
----------------------------------------------------------
local function startRecord()
	if recording then return end
	recording = true
	recordData = {}
	print("[AutoWalkV4] ‚ñ∂ Mulai merekam...")

	task.spawn(function()
		local lastPos = hrp.Position
		while recording do
			local currentPos = hrp.Position
			local delta = (currentPos - lastPos)
			local timeNow = tick()
			table.insert(recordData, {
				pos = {currentPos.X, currentPos.Y, currentPos.Z},
				time = timeNow,
				jump = hum:GetState() == Enum.HumanoidStateType.Jumping
			})
			lastPos = currentPos
			task.wait(0.05) -- smooth sampling
		end
	end)
end

local function stopRecord()
	if not recording then return end
	recording = false
	print("[AutoWalkV4] ‚èπ Stop. Total frame:", #recordData)
end

----------------------------------------------------------
-- === PLAYBACK ===
----------------------------------------------------------
local function playRecord()
	if #recordData == 0 then
		warn("[AutoWalkV4] Tidak ada data rekaman!")
		return
	end
	if playing then return end
	playing = true
	print("[AutoWalkV4] ‚ñ∂ Memutar ulang... (" .. #recordData .. " frame)")

	ensureBV()
	local i = 1
	local lastPos = hrp.Position

	playConn = RunService.Heartbeat:Connect(function()
		if not playing then return end
		if i >= #recordData then
			cleanupBV()
			playConn:Disconnect()
			playing = false
			print("[AutoWalkV4] ‚úÖ Replay selesai.")
			return
		end

		local step = recordData[i]
		local nextStep = recordData[i + 1]
		if not step or not nextStep then return end

		local target = Vector3.new(nextStep.pos[1], nextStep.pos[2], nextStep.pos[3])
		local move = (target - hrp.Position)
		local flatDir = Vector3.new(move.X, 0, move.Z)
		local dist = flatDir.Magnitude
		local baseSpeed = (hum.WalkSpeed or 16) * playSpeed

		if dist > 0.5 then
			local vel = flatDir.Unit * baseSpeed
			BV.Velocity = Vector3.new(vel.X, 0, vel.Z)
			hrp.CFrame = CFrame.lookAt(hrp.Position, hrp.Position + flatDir)
		else
			BV.Velocity = Vector3.zero
		end

		if step.jump then
			hum.Jump = true
		end

		i += 1
	end)
end

local function stopPlay()
	if not playing then return end
	playing = false
	if playConn then playConn:Disconnect() end
	cleanupBV()
	print("[AutoWalkV4] ‚èπ Replay dihentikan.")
end

----------------------------------------------------------
-- === SAVE / LOAD JSON ===
----------------------------------------------------------
local function saveRecord()
	if #recordData == 0 then
		warn("[AutoWalkV4] Tidak ada data untuk disimpan!")
		return
	end
	writefile(saveFile, HttpService:JSONEncode(recordData))
	print("[AutoWalkV4] üíæ Disimpan ke:", saveFile)
end

local function loadRecord()
	if not isfile(saveFile) then
		warn("[AutoWalkV4] File tidak ditemukan!")
		return
	end
	local data = readfile(saveFile)
	recordData = HttpService:JSONDecode(data)
	print("[AutoWalkV4] üìÇ Data dimuat:", #recordData, "frame.")
end

----------------------------------------------------------
-- === UI (Rayfield) ===
----------------------------------------------------------
Tab:CreateButton({
	Name = "‚ñ∂ Start Record",
	Callback = startRecord
})
Tab:CreateButton({
	Name = "‚èπ Stop Record",
	Callback = stopRecord
})
Tab:CreateButton({
	Name = "üé¨ Play Path",
	Callback = playRecord
})
Tab:CreateButton({
	Name = "üõë Stop Play",
	Callback = stopPlay
})
Tab:CreateButton({
	Name = "üíæ Save Path",
	Callback = saveRecord
})
Tab:CreateButton({
	Name = "üìÇ Load Path",
	Callback = loadRecord
})

Tab:CreateSlider({
	Name = "Replay Speed",
	Range = {0.5, 3},
	Increment = 0.1,
	Suffix = "x",
	CurrentValue = 1,
	Callback = function(v)
		playSpeed = v
	end
})

Tab:CreateSlider({
	Name = "WalkSpeed",
	Range = {10, 200},
	Increment = 1,
	Suffix = " WS",
	CurrentValue = 16,
	Callback = function(v)
		if hum then hum.WalkSpeed = v end
	end
})

Tab:CreateSlider({
	Name = "JumpPower",
	Range = {10, 300},
	Increment = 1,
	Suffix = " JP",
	CurrentValue = 50,
	Callback = function(v)
		if hum then hum.JumpPower = v end
	end
})

print("[AutoWalkV4] ‚úÖ Loaded successfully with smooth recording Rayfield UI.")
